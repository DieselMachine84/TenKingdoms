using System;

namespace TenKingdoms;

public static class UnitAttackHelper
{
//------------------------------------------------------------------------------//
// the codes in this file is used to return a pair of offset.  Adding the offsets
// with a target location, the attacker can find a suitable space to attack the
// target.
//------------------------------------------------------------------------------//

	// target size 1x1
	private static int[][] attack_x_offset11 =
	{
		new[] { -1, -1, -1, 0, 0, 1, 1, 1 }, new[] { -1, 0, -1, 1, -1, 1, 0, 1 },
		new[] { 0, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 0, 0, -1, -1, -1 }, new[] { 1, 0, 1, -1, 1, -1, 0, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, 0, 1, 1 }
	};

	// target size 1x2
	private static int[][] attack_x_offset12 =
	{
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 1, 1 }, new[] { -1, -1, 0, -1, 1, -1, 1, 0, 1, 1 },
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 1, 1, 0, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 1x3
	private static int[][] attack_x_offset13 =
	{
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 1, 1, 1 }, new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, 0, 1, 1 },
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 1, 0, 0, -1, -1, -1, -1, -1 }, new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 1x4
	private static int[][] attack_x_offset14 =
	{
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 1, 1, 1, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1 },
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0 },
		new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0 },
		new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 2x1
	private static int[][] attack_x_offset21 =
	{
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 2 }, new[] { -1, 0, -1, 1, -1, 2, 0, 2, 1, 2 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { 2, 1, 2, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 2, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 2, 1, 2, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { -1, 0, -1, 1, -1, 2, 0, 2, 1, 2 }
	};

	// target size 2x2
	private static int[][] attack_x_offset22 =
	{
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2 }, new[] { -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { 2, 2, 1, 2, 0, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 2, -1, 2, -1, 2, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 2, 0, 2, 1, 2, 2 }
	};

	// target size 2x3
	private static int[][] attack_x_offset23 =
	{
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2, 2 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2, 2 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2, 2 }
	};

	// target size 2x4
	private static int[][] attack_x_offset24 =
	{
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, -1, 2, 0, 2, 1, 2, 2 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, -1, 2, 0, 2, 1, 2, 2 }
	};

	// target size 3x1
	private static int[][] attack_x_offset31 =
	{
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 3, 2, 3 },
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 2, 0, 1 }, new[] { 3, 2, 3, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 3, 2, 3, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, 0, 2, 1 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 3, 2, 3 }
	};

	// target size 3x2
	private static int[][] attack_x_offset32 =
	{
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3 }, new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3 },
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 }, new[] { 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 }, new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3 }
	};

	// target size 3x3
	private static int[][] attack_x_offset33 =
	{
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3 },
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 3, 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3, 3 }
	};

	// target size 3x4
	private static int[][] attack_x_offset34 =
	{
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3, 3 },
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3, 3 }
	};

	// target size 4x1
	private static int[][] attack_x_offset41 =
	{
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 4, 2, 4, 3, 4 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 }, new[] { 4, 3, 4, 2, 4, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 4, 3, 4, 2, 4, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 4, 2, 4, 3, 4 }
	};

	// target size 4x2
	private static int[][] attack_x_offset42 =
	{
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 4, 1, 4, 2, 4, 3, 4 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 4, 1, 4, 2, 4, 3, 4 }
	};

	// target size 4x3
	private static int[][] attack_x_offset43 =
	{
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 }
	};

	// target size 4x4
	private static int[][] attack_x_offset44 =
	{
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 2, 1, 3, 0, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4, 4 }
	};

	// target size 1x1
	private static int[][] attack_y_offset11 =
	{
		new[] { 0, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 0, 0, -1, -1, -1 }, new[] { 1, 0, 1, -1, 1, -1, 0, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, 0, 1, 1 },
		new[] { -1, -1, -1, 0, 0, 1, 1, 1 }, new[] { -1, 0, -1, 1, -1, 1, 0, 1 }
	};

	// target size 1x2
	private static int[][] attack_y_offset12 =
	{
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { 2, 1, 2, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 2, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 2, 1, 2, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { -1, 0, -1, 1, -1, 2, 0, 2, 1, 2 },
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 2 }, new[] { -1, 0, -1, 1, -1, 2, 0, 2, 1, 2 }
	};

	// target size 1x3
	private static int[][] attack_y_offset13 =
	{
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 2, 0, 1 }, new[] { 3, 2, 3, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 3, 2, 3, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, 0, 2, 1 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 3, 2, 3 },
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 3, 2, 3 }
	};

	// target size 1x4
	private static int[][] attack_y_offset14 =
	{
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 }, new[] { 4, 3, 4, 2, 4, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1 }, new[] { 4, 3, 4, 2, 4, 1, 3, 0, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 4, 2, 4, 3, 4 },
		new[] { -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4 }, new[] { -1, 0, -1, 1, -1, 2, 0, 3, 1, 4, 2, 4, 3, 4 }
	};

	// target size 2x1
	private static int[][] attack_y_offset21 =
	{
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 1, 1, 0, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 1, 0, 1, 1 },
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 1, 1 }, new[] { -1, -1, 0, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 2x2
	private static int[][] attack_y_offset22 =
	{
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 }, new[] { 2, 2, 1, 2, 0, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 2, -1, 2, -1, 2, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 2, 0, 2, 1, 2, 2 },
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2 }, new[] { -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2 }
	};

	// target size 2x3
	private static int[][] attack_y_offset23 =
	{
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 }, new[] { 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 }, new[] { 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 }, new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3 },
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3 }, new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3 }
	};

	// target size 2x4
	private static int[][] attack_y_offset24 =
	{
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 4, 1, 4, 2, 4, 3, 4 },
		new[] { -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, 0, 4, 1, 4, 2, 4, 3, 4 }
	};

	// target size 3x1
	private static int[][] attack_y_offset31 =
	{
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0 }, new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 1, 0, 0, -1, -1, -1, -1, -1 }, new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0 }, new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, 0, 1, 1 },
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 1, 1, 1 }, new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 3x2
	private static int[][] attack_y_offset32 =
	{
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2, 2 },
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2, 2 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, 0, 2, 1, 2, 2 }
	};

	// target size 3x3
	private static int[][] attack_y_offset33 =
	{
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 3, 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, 0, 3, 1, 3, 2, 3, 3 },
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3 }
	};
	
	// target size 3x4
	private static int[][] attack_y_offset34 =
	{
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 4, 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 },
		new[] { -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 }
	};

	// target size 4x1
	private static int[][] attack_y_offset41 =
	{
		new[] { 0, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0 },
		new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 1, 1, 1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 1, 1, 0, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, -1 },
		new[] { 0, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 0 },
		new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, -1 },
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 1, 1, 1, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 1, -1, 1, -1, 1, 0, 1, 1 }
	};

	// target size 4x2
	private static int[][] attack_y_offset42 =
	{
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 2, 2, 1, 2, 0, 2, -1, 2, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 0, 1, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, -1, 2, 0, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, -1, 2, 0, 2, 1, 2, 2 },
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 2, -1, 2, 0, 2, 1, 2, 2 }
	};

	// target size 4x3
	private static int[][] attack_y_offset43 =
	{
		new[] { 1, 2, 0, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 2, 0, 1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 3, 3, 2, 3, 1, 3, 0, 3, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 1, 0, 2, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3, 3 },
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 3, 0, 3, 1, 3, 2, 3, 3 }
	};

	// target size 4x4
	private static int[][] attack_y_offset44 =
	{
		new[] { 1, 2, 0, 3, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, 0, 3, 1, 2 },
		new[] { 4, 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1, -1 },
		new[] { 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1 },
		new[] { 4, 3, 4, 2, 4, 1, 4, 0, 4, -1, 4, -1, 3, -1, 2, -1, 1, -1, 0, -1 },
		new[] { 2, 1, 3, 0, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 4, -1, 3, 0, 2, 1 },
		new[] { -1, -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4, 4 },
		new[] { -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4 },
		new[] { -1, 0, -1, 1, -1, 2, -1, 3, -1, 4, -1, 4, 0, 4, 1, 4, 2, 4, 3, 4 }
	};

	public static int[] get_target_x_offset(int targetWidth, int targetHeight, int curDir)
	{
		int targetType = targetWidth * 10 + targetHeight;
		switch (targetType)
		{
			case 11: return attack_x_offset11[curDir];
			case 12: return attack_x_offset12[curDir];
			case 13: return attack_x_offset13[curDir];
			case 14: return attack_x_offset14[curDir];
			case 21: return attack_x_offset21[curDir];
			case 22: return attack_x_offset22[curDir];
			case 23: return attack_x_offset23[curDir];
			case 24: return attack_x_offset24[curDir];
			case 31: return attack_x_offset31[curDir];
			case 32: return attack_x_offset32[curDir];
			case 33: return attack_x_offset33[curDir];
			case 34: return attack_x_offset34[curDir];
			case 41: return attack_x_offset41[curDir];
			case 42: return attack_x_offset42[curDir];
			case 43: return attack_x_offset43[curDir];
			case 44: return attack_x_offset44[curDir];
		}

		return null;
	}

	public static int[] get_target_y_offset(int targetWidth, int targetHeight, int curDir)
	{
		int targetType = targetWidth * 10 + targetHeight;
		switch (targetType)
		{
			case 11: return attack_y_offset11[curDir];
			case 12: return attack_y_offset12[curDir];
			case 13: return attack_y_offset13[curDir];
			case 14: return attack_y_offset14[curDir];
			case 21: return attack_y_offset21[curDir];
			case 22: return attack_y_offset22[curDir];
			case 23: return attack_y_offset23[curDir];
			case 24: return attack_y_offset24[curDir];
			case 31: return attack_y_offset31[curDir];
			case 32: return attack_y_offset32[curDir];
			case 33: return attack_y_offset33[curDir];
			case 34: return attack_y_offset34[curDir];
			case 41: return attack_y_offset41[curDir];
			case 42: return attack_y_offset42[curDir];
			case 43: return attack_y_offset43[curDir];
			case 44: return attack_y_offset44[curDir];
		}

		return null;
	}
}